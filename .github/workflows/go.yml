name: Go
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        go: ["stable", "oldstable"]
    steps:
    - name: Set up Go ${{matrix.go}}
      uses: actions/setup-go@v3
      with:
        go-version: ${{matrix.go}}
        check-latest: true
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Lint code
      run: |
          gofiles=$(find ./ -name '*.go') && [ -z "$gofiles" ] || unformatted=$(goimports -l $gofiles) && [ -z "$unformatted" ] || (echo >&2 "Go files must be formatted with gofmt. Following files has problem: $unformatted" &&  true);
          diff <(echo -n) <(gofmt -s -d .)
          export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
          go install golang.org/x/lint/golint@latest
          golint ./...
    - name: Static code check
      run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get -u github.com/gordonklaus/ineffassign
          ineffassign .
          go vet ./...
    - name: Build
      run: go build -v .

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        go: ["1.12.x", "1.13.x"]
    steps:
    - name: Set up Go ${{matrix.go}}
      uses: actions/setup-go@v3
      with:
        go-version: ${{matrix.go}}
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Run Test
      run: go test
